# ---------------Base Query, Mutation, Subscriptions----------------#
type Query{
    user(data: FindUserInput ): User!
    
}

type Mutation {
    createUser(data: CreateUserInput): User!
    updateUserEmail(data: UpdateUserEmailInput): User!
    deleteUser(data: DeleteUserInput): User!
}

# type Subscription{
#     data: DataType!
# }
# -------------------------Input Types----------------------------#
input CreateUserInput{
    name: String!
    email: String!
    password: String
}

input FindUserInput{
    id: ID,
    email: String
}

input UpdateUserEmailInput{
    id: ID!,
    email: String!
}

input DeleteUserInput{
    id: ID!
}
# -------------------------Data Types----------------------------#
type User {
    id: ID!
    name: String!
    email: String!
}

type Device {
    id: ID!
    dev_name: String!
    user: User!
    settings: SettingsType!
    records: [ RecordType ]
}

type SettingsType {
    light: SettingType!
    temp: SettingType!
    humidity: SettingType!
    moisture: SettingType!
}

type SettingType {
    average: Float!
    tol: Float!
}

type RecordType{
    date: String!
    data: [ DataType ]
}

type DataType{
    time: String!
    light: Float
    temp: Float
    humidity: Float
    moisture: Float
}
# -------------------------Subscription Payloads----------------------------#


type DataSubscriptionPayload {
    data: DataType!
    mutation: String!
}
